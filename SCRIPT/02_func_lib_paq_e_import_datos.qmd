---
title: "Funciones, paquetes e importe de datos"
author: "Kevin J. Paez"
format: html
editor: visual
---

# 1. Funciones en R

Las funciones en R son bloques de código que permiten automatizar tareas y realizar diversas operaciones. La mayoría requieren argumentos que determinan cómo se ejecutarán, especificando aspectos como los datos a utilizar, las variables involucradas y otros parámetros que influyen en el resultado.

Las funciones en R suelen ser intuitivas, ya que sus nombres describen su acción. Por ejemplo, `mean()` y `sd()` calculan el promedio y la desviación estándar de un vector numérico, respectivamente.

```{r}
## Creando un vector de datos
glucosa = c(150, 120, 101, 170)
```

```{r}
mean(glucosa) ## un argumento es el dato a utilizar
```

```{r}
sd(glucosa) 
```

```{r}
median(glucosa)
```

En algunos casos, los argumentos incluyen un signo de igual (=), lo que indica que tienen un valor por defecto y, por lo tanto, su especificación es opcional.

### Obteniendo ayuda sobre la función de la función

La pestaña de ayuda en RStudio (cuadrante inferior derecho) permite conocer en detalle el uso de las funciones. Para obtener información sobre una función, basta con ejecutar:

```{r}
?mean
```

### Los argumentos en las funciones

Existen dos formas de proporcionar argumentos a una función en R: especificando su nombre o sin hacerlo. Si no se especifica el nombre, se debe respetar el orden de los argumentos según la documentación de la función para evitar errores. A continuación, se muestra un ejemplo con rnorm(), que genera números aleatorios con distribución normal:

```{r}
rnorm(n = 10, mean = 50, sd = 15)
```

```{r}
rnorm(10, 50, 15)
```

Dado que la generación de números es aleatoria, los resultados varían en cada ejecución.

Para obtener el mismo conjunto de números aleatorios en diferentes ejecuciones, usamos set.seed():

```{r}
set.seed(100)
rnorm(n = 10, mean = 50, sd = 15)
```

```{r}
set.seed(100)
rnorm(10, 50, 15)
```

# 2. Paquetes (package) versus Librerias (library) en R

R proporciona muchas funciones útiles para el análisis de datos y la visualización de forma nativa. Sin embargo, para análisis avanzados o gráficos más específicos, es necesario instalar paquetes adicionales. Un paquete es una colección de funciones, datos y código compilado organizados para facilitar tareas específicas.

Por ejemplo, el paquete survival contiene funciones para el análisis de datos de supervivencia, como el método de Kaplan-Meier y la regresión de Cox. También incluye conjuntos de datos sobre supervivencia en distintos tipos de cáncer.

Cuando se instala un paquete en R, toda su información se almacena en un directorio de tu computadora. Este directorio se conoce como librería.

# 3. Instalar y cargar paquetes en R

Para instalar paquetes en R, se usa la función install.packages(). El nombre del paquete debe especificarse entre comillas:

```{r}
install.packages("here")
install.packages("tidyverse")
install.packages("survival")
```

Después de ejecutar esta línea de código, la consola mostrará actividad. Una vez que reaparezca el símbolo \>, la instalación habrá finalizado.

La instalación solo se realiza una vez, pero cada vez que se abre RStudio es necesario cargar el paquete antes de usarlo. Para ello, utilizamos library():

```{r}
library(tidyverse)
library(survival)
library(here)
```

# 4. Importando datos en R

Existen dos formas de importar datos en R: mediante clics o con código. La primera opción se explica en la guía práctica, mientras que aquí abordamos el proceso usando código.

Al importar datos en R, es importante conocer la extensión del archivo, su nombre y su ubicación en el sistema. Una forma sencilla de hacerlo es con los paquetes rio y here:

rio: Su función import() selecciona automáticamente la mejor opción para importar archivos, independientemente de su extensión. Sin este paquete, tendríamos que elegir manualmente la función adecuada. here: Permite especificar rutas de archivos de forma flexible y reproducible, sin necesidad de escribir la ruta absoluta del sistema operativo. Si los datos se encuentran en una carpeta llamada data, dentro del proyecto de trabajo, se pueden importar con la siguiente estructura:

Primero instalamos los paquetes

```{r}
#install.packages("here")
install.packages("rio") # Selección automatica de funciones
```

Cargamos los paquetes

```{r}
library(here)
library(rio)
```

Estructura (no corra este chunk)

```{r}
nombre_del_dataset = import(here("nombrecarpeta", "nombre_archivo.extensión"))
```

### Importanto un archivo .csv

```{r}
data_artritis = import(here("data", "s02_treat_artritis.csv"))
```

### Importanto un archivo .xlsx

```{r}
data_artritis_1 = import(here("data", "s02_treat_artritis.xlsx"))
```

### Importanto un archivo SPSS, .sav

```{r}
data_artritis_2 = import(here("data", "s02_treat_artritis.sav"))
```

### Importanto un archivo .Rdata

```{r}
data_artritis_3 = import(here("data", "s02_treat_artritis.Rdata"))
```

Es importante incluir la extensión del archivo para que R la función pueda ejecutarse correctamente.

# 5. Exportando datos

```{r}
write_excel_csv(nombre_del_objeto, "nombredecarpeta/nombre_archivo.csv")
```

Ejemplo

```{r}
write_excel_csv(data_diabetes, "data_diabetes.csv")
```

El archivo se guardará en el proyecto

# 6. `dataframes`

Los dataframes son datos ordenados de una forma estandard, donde las columnas (vectores) son variables y las filas son observaciones.

En r, podemos generar dataframes usando la función data.frame. Realizamos esto al combinar vectores.

Creando los vectores

```{r}
edad = c(34, 43, 28, 30, 21)
sexo = c("mujer", "varon", "mujer", "mujer", "varon")
hipertension = c("sí", "no", "sí", "no", "no")
```

Creando un dataframe con la función `data.frame`

```{r}
mis_datos = data.frame(edad, sexo, hipertension)
```

Visualizar el `dataframe`

```{r}
mis_datos
```

En la mayoría de casos, los datos que importes a R serán dataframes.

Podemos comprobar esto al evaluar el tipo de objeto del conjunto de datos importado usando la función

\`class()\`.

```{r}
class(data_artritis)
```

```{r}
View(data_artritis)
```
